name: Build, Test & Report

on:
  pull_request:
    branches: ["main"]

jobs:
  frontend:
    name: Frontend Build & Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ["16.10.0"]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: front/package-lock.json

      - run: npm ci
        working-directory: front

      - run: npm run build --if-present
        working-directory: front

      - run: npm test -- --browsers ChromeHeadless --watch=false --code-coverage
        working-directory: front

      - name: Upload frontend coverage report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage-report
          path: front/coverage/

  backend:
    name: Backend Build & Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install dependencies and run tests
        working-directory: back
        run: mvn clean verify

      - name: Upload backend JaCoCo coverage report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-report
          path: back/target/site/jacoco

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: [frontend, backend]

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Compile backend for SonarQube
        working-directory: back
        run: mvn clean compile test-compile

      - name: Download frontend coverage report
        uses: actions/download-artifact@v4
        with:
          name: frontend-coverage-report
          path: front/coverage

      - name: Download backend coverage report
        uses: actions/download-artifact@v4
        with:
          name: backend-coverage-report
          path: back/target/site/jacoco

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
